<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Minimalist blog.</description>
    <link>https://jaroslavurbann.github.io/blog/</link>
    <atom:link href="https://jaroslavurbann.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 25 Nov 2019 01:36:12 +0100</pubDate>
    <lastBuildDate>Mon, 25 Nov 2019 01:36:12 +0100</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Progtest Explained, Water Tanks!</title>
        <description>&lt;h2 id=&quot;problem-description&quot;&gt;Problem description&lt;/h2&gt;
&lt;p&gt;The task is to write a program that can compute the altitude of the water surface in a system of water tanks.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say that there is a water company that manages water tanks. Every water tank has a block-like shape and is connected to every other water tank with tubes of zero volume (to ease our calculations). The situation is as given:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/JaroslavUrbann/blog/master/assets/images/water_tanks.png&quot; alt=&quot;Image from the original Progtest problem&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;em&gt;Image from the original Progtest problem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The input is a set of n (n &amp;lt;= 200 000) water tanks defined as Alt H W D. Alt is the altitude of the bottom of a given water tank, H is the height, W is the width and D is the depth.&lt;/p&gt;

&lt;p&gt;Next comes a sequence of queries with different volumes of water. &lt;strong&gt;The task is to compute the altitude of the water surface&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The solution&lt;/h2&gt;

&lt;h3 id=&quot;1-cultivating-our-data&quot;&gt;1) Cultivating our data&lt;/h3&gt;

&lt;p&gt;Firstly, the width and depth of a water tank can be multiplied and combined into a single variable containing the area of a base of a given water tank.&lt;/p&gt;

&lt;p&gt;Secondly, the altitude and height of a water tank can also be combined into (semantically) one variable, the altitude of the lower base (Alt) and altitude of the upper base (Alt + H).&lt;/p&gt;

&lt;p&gt;We now have &lt;strong&gt;2 types of variables:&lt;/strong&gt; altitudes and areas.&lt;/p&gt;

&lt;h3 id=&quot;2-the-imagination-bit&quot;&gt;2) The imagination bit&lt;/h3&gt;

&lt;p&gt;Now imagine going from the lowest point of our water tank system to the highest point of our water tank system. The total water area would change based on our water tanks being ‚Äúadded‚Äù and ‚Äúremoved‚Äù as we go.&lt;/p&gt;

&lt;p&gt;We should try and represent that with our data.&lt;/p&gt;

&lt;h3 id=&quot;3-creating-our-dataset&quot;&gt;3) Creating our dataset&lt;/h3&gt;

&lt;p&gt;Notice that our input data can be easily transformed into 2n objects with the following two attributes: area_added and altitude. Let‚Äôs call these objects thresholds and look at the example below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/JaroslavUrbann/blog/master/assets/images/thresholds.png&quot; alt=&quot;Visualizing Thresholds&quot; /&gt;
&lt;em&gt;Note the minuses in area_added in the top thresholds.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If we save our thresholds in an array and sort them by altitude, we can imagine our area_added attributes looking like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/JaroslavUrbann/blog/master/assets/images/arr1.png&quot; alt=&quot;Our array&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-transformations-transformations&quot;&gt;4) Transformations, transformations&lt;/h3&gt;

&lt;p&gt;If we iterate over the array once and add up our surfaces, we can visualize the state of our array like this, aka &lt;strong&gt;the total surface at each altitude&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/JaroslavUrbann/blog/master/assets/images/arr2.png&quot; alt=&quot;Our array after the first transformation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we now take an item from the array and multiply its area with (altitude of the next item - our items‚Äô altitude), &lt;strong&gt;we get the total volume between 2 altitudes&lt;/strong&gt;. Since we want to query the global total volume, we just need to iterate the array once more and take these intermediate volumes and add them all together into an array that‚Äôs telling us the cumulative volume of our water tank system.&lt;/p&gt;

&lt;p&gt;After these transformations, we get an array with &lt;strong&gt;the cumulative volume of our water tank system.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remember, our now array stores 2 types of information at each index, the altitude and the total volume of our system up to that altitude.&lt;/p&gt;

&lt;p&gt;So we can now perform a simple binary search on our array to get upper and lower altitude boundaries for our volume and calculate the real altitude with:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.codecogs.com/eqnedit.php?latex=\large&amp;space;\\&amp;space;A_L&amp;space;=&amp;space;\text{Altitude&amp;space;of&amp;space;the&amp;space;lower&amp;space;boundary}\\&amp;space;A_U&amp;space;=&amp;space;\text{Altitude&amp;space;of&amp;space;the&amp;space;upper&amp;space;boundary}\\&amp;space;V_Q&amp;space;=&amp;space;\text{Queried&amp;space;volume}\\&amp;space;V_L&amp;space;=&amp;space;\text{Volume&amp;space;of&amp;space;the&amp;space;lower&amp;space;boundry}\\&amp;space;V_U&amp;space;=&amp;space;\text{Volume&amp;space;of&amp;space;the&amp;space;upper&amp;space;boundry}\\&amp;space;\\&amp;space;V&amp;space;=&amp;space;A_L&amp;space;&amp;plus;&amp;space;(A_U&amp;space;&amp;plus;&amp;space;A_L)&amp;space;\cdot&amp;space;\tfrac{V_Q&amp;space;-&amp;space;V_L}{V_U&amp;space;-&amp;space;V_L}\\&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://latex.codecogs.com/gif.latex?\large&amp;space;\\&amp;space;A_L&amp;space;=&amp;space;\text{Altitude&amp;space;of&amp;space;the&amp;space;lower&amp;space;boundary}\\&amp;space;A_U&amp;space;=&amp;space;\text{Altitude&amp;space;of&amp;space;the&amp;space;upper&amp;space;boundary}\\&amp;space;V_Q&amp;space;=&amp;space;\text{Queried&amp;space;volume}\\&amp;space;V_L&amp;space;=&amp;space;\text{Volume&amp;space;of&amp;space;the&amp;space;lower&amp;space;boundry}\\&amp;space;V_U&amp;space;=&amp;space;\text{Volume&amp;space;of&amp;space;the&amp;space;upper&amp;space;boundry}\\&amp;space;\\&amp;space;V&amp;space;=&amp;space;A_L&amp;space;&amp;plus;&amp;space;(A_U&amp;space;&amp;plus;&amp;space;A_L)&amp;space;\cdot&amp;space;\tfrac{V_Q&amp;space;-&amp;space;V_L}{V_U&amp;space;-&amp;space;V_L}\\&quot; title=&quot;\large \\ A_L = \text{Altitude of the lower boundary}\\ A_U = \text{Altitude of the upper boundary}\\ V_Q = \text{Queried volume}\\ V_L = \text{Volume of the lower boundry}\\ V_U = \text{Volume of the upper boundry}\\ \\ V = A_L + (A_U + A_L) \cdot \tfrac{V_Q - V_L}{V_U - V_L}\\&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Nov 2019 00:00:00 +0100</pubDate>
        <link>https://jaroslavurbann.github.io/blog/2019/Progtest-explained,-Water-tanks!/</link>
        <guid isPermaLink="true">https://jaroslavurbann.github.io/blog/2019/Progtest-explained,-Water-tanks!/</guid>
        
        
      </item>
    
      <item>
        <title>Symposium, Book üëè Review üëè</title>
        <description>&lt;p&gt;I read the whole book and I liked it, but I felt like I needed something more logic-based after I finished reading it.&lt;/p&gt;

&lt;h2 id=&quot;random-note&quot;&gt;Random note&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;I was surprised how bisexual everyone was. When some of them talked about the concept of love, they were talking about the homosexual relationship between an older and a younger man.&lt;/li&gt;
  &lt;li&gt;One person even said that love of boys is a more noble kind of love because they are born smarter and overall better.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&quot;notes-on-the-actual-point-of-the-book&quot;&gt;Notes on the actual point of the book:&lt;/h2&gt;

&lt;p&gt;Every speaker took a turn and shared their take on Eros with others, here are some points they made that I still remember:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;There is an upper and a lower kind of love
    &lt;ul&gt;
      &lt;li&gt;lower love is the love of things that change: money, appearance, etc.&lt;/li&gt;
      &lt;li&gt;upper love is the love of the truth, which doesn‚Äôt change&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;When people do things for love, even the most atypical kind of behavior suddenly becomes acceptable&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;One speaker had a theory that people originally had 2 heads, arms, legs .. and that they were split into two and now we search the world for our soulmate from whom we were separated like this&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Socrates said that people wish for things that they don‚Äôt possess, which he very clearly explains and it makes sense. But then he transfers that principle onto love without any explanation and claims that, therefore, love things that they don‚Äôt have. I didn‚Äôt see why that should be the case when I was reading the book, but it made more sense when I heard that ancient greek had the same word for love and want.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;The idea that lovers should make each other the best person they can be also appeared in this book and I like it a lot.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 20 Oct 2019 00:00:00 +0200</pubDate>
        <link>https://jaroslavurbann.github.io/blog/2019/Symposium,-Book-Review/</link>
        <guid isPermaLink="true">https://jaroslavurbann.github.io/blog/2019/Symposium,-Book-Review/</guid>
        
        
      </item>
    
      <item>
        <title>Ai Superpowers, Book üëè Review üëè</title>
        <description>&lt;h2 id=&quot;random-notes-on-a-book-by-kai-fu-lee&quot;&gt;Random notes on a book by Kai-fu Lee&lt;/h2&gt;

&lt;p&gt;Its the first book on AI I ever read. Unfortunately, I stopped in about 3/4 of the book, I felt like it was getting repetitive.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I liked the authors‚Äô notes on China, it‚Äôs a topic I‚Äôm very interested in. Here are some thoughts that I haven‚Äôt heard before:
    &lt;ul&gt;
      &lt;li&gt;Mobile apps are done differently in western countries - many apps for many different things instead of one big one for everything.&lt;/li&gt;
      &lt;li&gt;Western companies routinely fail when investing money and resources into the Chinese market - they don‚Äôt adapt to different needs and habits of the Chinese.&lt;/li&gt;
      &lt;li&gt;Chinese companies that rip off western brands (in the internet sphere) are not just lazy copycats, they are willing to adapt their product which makes them win out over the original.&lt;/li&gt;
      &lt;li&gt;Chinas‚Äô copycats competing against each other gave birth to great Chinese entrepreneurs.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;And some notes on AIs‚Äô future (and China again):
    &lt;ul&gt;
      &lt;li&gt;The age of implementation arrived and AI research might slow down.&lt;/li&gt;
      &lt;li&gt;The amount and quality of data will be a big factor and China has a centralized mobile application (WeChat) that produces enormous amounts of data, and that also reaches much further into the real life of its‚Äô own users more than any other western app.&lt;/li&gt;
      &lt;li&gt;I never realized how much of the current AI is just on the internet and not in real life.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Some topics from the latter part of the book:
    &lt;ul&gt;
      &lt;li&gt;The potential loss of jobs and existential crisis.
        &lt;ul&gt;
          &lt;li&gt;These topics seemed quite theoretical and were relying on a lot of what-ifs, so decided to skip them. Might revisit them later.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 +0200</pubDate>
        <link>https://jaroslavurbann.github.io/blog/2019/AI-Superpowers,-Book-Review/</link>
        <guid isPermaLink="true">https://jaroslavurbann.github.io/blog/2019/AI-Superpowers,-Book-Review/</guid>
        
        
      </item>
    
      <item>
        <title>Try Stopping Early</title>
        <description>&lt;p&gt;If you‚Äôre a competitive person, then you like spending your time effectively.
The natural time spent distribution of any sort of endeavor looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/JaroslavUrbann/blog/master/assets/images/time_graph.png&quot; alt=&quot;The typical distribution of your interest and time spent&quot; /&gt;&lt;/p&gt;

&lt;p&gt;An old Czech proverb says that you should ‚Äúend at the height of things‚Äù. It‚Äôs not something many people do, simply because their interest still brings them pleasure and they don‚Äôt want to or don‚Äôt have the will power, to end things abruptly. Quite often you see people who stopped giving their fullest to a sport, yet they still hang around for a few years, missing workouts here and there and seemingly just doing everything out of habit, with no real goal in mind. Or people who are now adults and still come back to videogames, but always ever less so often than before, until they eventually stop altogether. Or people who still hang on to their old partners, even though they know that their relationship is dying down and won‚Äôt stand the test of time in the ensuing few years. If you feel like you‚Äôre reaching the right slope of the graph, man up, overcome nostalgia and completely cut it out of your life and you‚Äôll be rewarded by only remembering the good times.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Aug 2019 00:00:00 +0200</pubDate>
        <link>https://jaroslavurbann.github.io/blog/2019/Try-stopping-early/</link>
        <guid isPermaLink="true">https://jaroslavurbann.github.io/blog/2019/Try-stopping-early/</guid>
        
        
      </item>
    
      <item>
        <title>Overcomming Procrastination</title>
        <description>&lt;p&gt;The key is in setting a specific goal. If you wish to be wealthy, then that‚Äôs a great start to becoming wealthy, but it‚Äôs not a great goal. &lt;strong&gt;Great goals should make you do things to achieve them&lt;/strong&gt;. When wishing to be wealthy, a great goal would be to, for example, launch a startup. It‚Äôs quite simple to see what things a startup CEO should know/do. They should study basic economics, follow current trends, learn how to be likable, read relevant books, etc.. And since you already have these things in your head, you‚Äôll be inclined to pick a few that you like and start studying. It comes down to being able to see the specific things that you‚Äôre missing and you‚Äôll automatically start filling the gaps to get closer to your goal.&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Jul 2019 00:00:00 +0200</pubDate>
        <link>https://jaroslavurbann.github.io/blog/2019/Overcomming-procrastination/</link>
        <guid isPermaLink="true">https://jaroslavurbann.github.io/blog/2019/Overcomming-procrastination/</guid>
        
        
      </item>
    
  </channel>
</rss>
